缺省的函数参数：
	在声明中进行对形参定义一个默认值；
	在某个默认参数右面，需要都使用默认参数；为什么？

哑元：（very intresting！）
	就是没有形参名字，只有形参类型的情况。一般用于2中情况：
	- 保证函数/版本的向下兼容
	- 形成函数的重载版本
	1如：
	v1.0
	int foo(int)
	{
	  ...	//
	}
	foo(10)	//在这里，10这个数值无法拿到(堆栈或内存中)，因为没有名字来接收。
		//所以这就是只有类型int，而无名字的原因和用法。
	2.如：使用同一个命名空间的同名函数，分别实现返回加法和减法功能。
	int cal(int x,int y){return (x+y);}
	int cal(int x,int y){return (x-y);}
	这时，就需要使用哑元，在第一个或第二个形参里面添加一个int，那么就形成了重载版本。可以
	实现上面的要求。
	3.如
	i++
	++i 使用++分别实现变量后加，和变量前加。



作为一个合格的程序员，需要掌握一个知识体系，掌握下面的相关内容：
	数据库：
	脚本语言：python脚本语言或者perl
