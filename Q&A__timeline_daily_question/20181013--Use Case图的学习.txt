将需求分解成一系列的用例，分析和设计是在用例的基础上，对商业模式的结构和行为进行详细的描述。
结构分析：
  一般用类图，类图又可以按照M - V - C模型分为数据类、界面类、和控制类。
行为分析：
  是描述三种类之间的流程操作关系，一般是用时序图或者状态图来表示。

百度解释：
用例（英语：use case），或译使用案例、用况，是软件工程或系统工程中对系统如何反应外界请求的描述，是一种通过用户的使用场景来获取需求的技术。每个用例提供了一个或多个场景，该场景说明了系统是如何和最终用户或其它系统互动，也就是谁可以用系统做什么，从而获得一个明确的业务目标。编写用例时要避免使用技术术语，而应该用最终用户或者领域专家的语言。用例一般是由软件开发者和最终用户共同创作的。

------------------------------- separator -----------------------------
USE CASE
  国内一般翻译为用例，它描述的是一个“操作”，而不是一个功能。传统的软件模型设计喜欢在需求分析时
把业务分解成功能模块，这样的弊端就是混淆了需求和设计的界限，因为功能模块的划分牵涉到系统的概要
设计。在RUP中提倡用 use case来代替功能模块的划分。
  与功能模块不同的是，用例不是站在开发者的角度，而是站在用户的角度来分解系统，因为用户并不想了解
系统内部的结构和设计，他们关心的是系统的服务，即 系统是如何去操作的，这就是用例的基本思想。

用例模型主要由以下元素组成：
  * 参与者（actor）
    参与者是指：存在于被定义的系统外部，并与该系统发生交互的人或其他系统，他们代表的是系统的使用者或
使用环境。（你能干什么。）
  * 用例（use case）
    用例用于表示系统所提供的服务，它定义了系统是如何被参与者所使用的。
他描述的是，参与者为了使用系统所提供的某一完整功能而与系统之间发生的一段对话。（我有什么功能可以提供。）
  * 通讯关联(Communication Association) 
通讯关联用于表示参与者和用例之间的对应关系，它表示参与者使用了系统中的哪些服务（用例），
或者说系统所提供的服务（用例）是被哪些参与者所使用的。 （哪个参与者使用了系统的哪些功能。）

===================================================================
Note: 设计工具是EA（Enterprise Architect 7.0）


